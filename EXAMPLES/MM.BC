rem BATCHCOM demonstration program: Master Mind

crt
GoTo StartProgram

var True  = 1
var False = 0

var White    = $07
var Inverse  = $70
var Bright   = $0F
var InvBlink = $F8

var BlockCursor = $000F
var NoCursor    = $0F00

var OldCursor
var Key
var Line
var Position

var N1
var N2
var N3
var N4

var T1
var T2
var T3
var T4

var i
var j

var RightNumber
var RightPlace


:Init
   Set Border=ÛßÛÛÛÛÜÛ
Return


:StatusLine
var L
   SetColor Inverse
   MoveTo 5, 23
   WriteChar 32, 72
   rem	Center the text on the screen
   GetLength Text
   Let L = ErrorLevel
   Div L, 2
   Neg L
   Add L, 40
   MoveTo L, 23
   Echo %Text%$
Return


:QuitYN
   Set OldText=%Text%
   Beep
   SetCursor OldCursor
   Set Text = Do you want to quit (y/n)? 
   GoSub StatusLine
   Set Text=%OldText%
   Set OldText=
   AskYN ""
   if not ErrorLevel 1 GoTo DontQuit
   :Quit
      SetWindow 1, 1, 80, 25
      SetColor White
      Cls
      Exit
   :DontQuit
      SetCursor BlockCursor
      GoSub StatusLine
Return


:WriteMM
   rem	Write 'Master Mind' in large letters.
   MoveTo 59, 3
   Echo ▄
   MoveTo 59, 4
   Echo █
   MoveTo 30, 5
   Echo ▀█▄▀▀▀█▄▀▀▀█   ▄▀▀▀█  █▀▀▀█ ▀█▀▀▀▀ ▄▀▀▀▀▄ ▀▄▀▀▀▄
   MoveTo 31, 6
   Echo █    █    █       █  █      █     █    █  █
   MoveTo 31, 7
   Echo █    █    █  ▄▄▄▄▄█  █▄▄▄▄  █     █▄▄▄▄█  █
   MoveTo 31, 8
   Echo █    █    █  █    █      █  █     █       █
   MoveTo 31, 9
   Echo █    █    █  █    █      █  █     █       █
   MoveTo 31, 10
   Echo █    █    █  █▄▄▄▀█▄ █▄▄▄█  ▀▄▄▄▀ ▀▄▄▄▄▀  █
   MoveTo 55, 12
   Echo ▄               █
   MoveTo 71, 13
   Echo █
   MoveTo 41, 14
   Echo ▀█▄▀▀▀█▄▀▀▀█  █ ▀█▄▀▀▀█  ▄▀▀▀▄█
   MoveTo 42, 15
   Echo █    █    █  █  █    █  █    █
   MoveTo 42, 16
   Echo █    █    █  █  █    █  █    █
   MoveTo 42, 17
   Echo █    █    █  █  █    █  █    █
   MoveTo 42, 18
   Echo █    █    █  █  █    █  █    █
   MoveTo 42, 19
   Echo █    █    █  █  █    █  ▀▄▄▄▄▀▄
Return


:InputNumbers
   rem	Input four different numbers
   SetColor Bright
   MoveTo Position, Line
   GetKey
   Let Key = ErrorLevel
   if %Key% = 0 GoTo Function
   if %Key% = 13 GoTo EnterPressed
   if %Key% = 27 GoSub QuitYN
   if %Key% < 48 GoTo InputNumbers
   if %Key% > 57 GoTo InputNumbers
   WriteChar %Key%
   Sub Key, 48
   if %Position% =  8 Let T1 = Key
   if %Position% = 11 Let T2 = Key
   if %Position% = 14 Let T3 = Key
   if %Position% = 17 Let T4 = Key
   GoTo kbRight
   :Function
      GetKey
      Let Key = ErrorLevel
      if %Key% = 71 GoTo kbHome
      if %Key% = 75 GoTo kbLeft
      if %Key% = 77 GoTo kbRight
      if %Key% = 79 GoTo kbEnd
      GoTo InputNumbers
      :kbHome
	 Let Position = 8
	 GoTo InputNumbers
      :kbLeft
	 if %Position% <= 8 GoTo InputNumbers
	 Sub Position, 3
	 GoTo InputNumbers
      :kbRight
	 if %Position% >= 17 GoTo InputNumbers
	 Add Position, 3
	 GoTo InputNumbers
      :kbEnd
	 Let Position = 17
	 GoTo InputNumbers
   :NotDone
      Beep
      GoTo InputNumbers
   :EnterPressed
   Let Position = 8
   if %T1% = -1 GoTo NotDone
   Let Position = 11
   if %T2% = -1 GoTo NotDone
   if %T2% = %T1% GoTo NotDone
   Let Position = 14
   if %T3% = -1 GoTo NotDone
   if %T3% = %T1% GoTo NotDone
   if %T3% = %T2% GoTo NotDone
   Let Position = 17
   if %T4% = -1 GoTo NotDone
   if %T4% = %T1% GoTo NotDone
   if %T4% = %T2% GoTo NotDone
   if %T4% = %T3% GoTo NotDone
Return


:CountScore
   Let RightNumber = 0
   Let RightPlace  = 0
   if %N1% = %T1% Inc RightPlace
   if %N2% = %T2% Inc RightPlace
   if %N3% = %T3% Inc RightPlace
   if %N4% = %T4% Inc RightPlace
   if %N1% = %T2% Inc RightNumber
   if %N1% = %T3% Inc RightNumber
   if %N1% = %T4% Inc RightNumber
   if %N2% = %T1% Inc RightNumber
   if %N2% = %T3% Inc RightNumber
   if %N2% = %T4% Inc RightNumber
   if %N3% = %T1% Inc RightNumber
   if %N3% = %T2% Inc RightNumber
   if %N3% = %T4% Inc RightNumber
   if %N4% = %T1% Inc RightNumber
   if %N4% = %T2% Inc RightNumber
   if %N4% = %T3% Inc RightNumber
Return


:ShowScore
   Let Position = 21
   MoveTo Position, Line
   if %RightPlace% = 0 GoTo Skip
   WriteChar 219, RightPlace
   Add Position, RightPlace
   MoveTo Position, Line
   :Skip
   if %RightNumber% = 0 Return
   WriteChar 176, RightNumber
Return


:ShowCorrect
   SetColor InvBlink
   MoveTo 7, 21
   Echo  %N1%  %N2%  %N3%  %N4% 
Return


:Randomize
   Inline  B4 2C		; mov ah, 2Ch			; Read system
   Inline  CD 21		; int 21h			;   time
   Inline  88 16 7C 01		; mov Byte Ptr [17Ch], dl	; Set the
   Inline							;   errorlevel
   Let i = ErrorLevel
   :UseRandom
      GetRandom
      Dec i
   if %i% >= -1 GoTo UseRandom
Return


:GetRandomNumber
   GetRandom
   Let i = ErrorLevel
   Div i, 20
   if %i% > 9 GoTo GetRandomNumber
Return


:StartProgram
   GetCursor OldCursor
   SetCursor NoCursor
   GoSub Init
   GoSub Randomize
   SetColor Bright
   cls
   FrameWindow DoubleFrame, Master Mind 
   SetColor White
   GoSub WriteMM
   SetWindow 5, 4, 26, 20
   FrameWindow %Border%
   GoSub GetRandomNumber
   Let N1 = i
   :Get2
   GoSub GetRandomNumber
   if %i% = %N1% GoTo Get2
   Let N2 = i
   :Get3
   GoSub GetRandomNumber
   if %i% = %N1% GoTo Get3
   if %i% = %N2% GoTo Get3
   Let N3 = i
   :Get4
   GoSub GetRandomNumber
   if %i% = %N1% GoTo Get4
   if %i% = %N2% GoTo Get4
   if %i% = %N3% GoTo Get4
   Let N4 = i
   Set Text = Type four numbers (0 - 9) and press $lEnter$g ... 
   GoSub StatusLine
   Let Line = 5
   :Repeat
      Let Position = 8
      SetColor Bright
      Let T1 = -1
      Let T2 = -1
      Let T3 = -1
      Let T4 = -1
      SetCursor BlockCursor
      GoSub InputNumbers
      SetCursor NoCursor
      GoSub CountScore
      GoSub ShowScore
      Inc Line
      if %RightPlace% = 4 GoTo YouWin
      if %Line% <= 19 GoTo Repeat
   :YouLose
      Beep
      GoSub ShowCorrect
      SetCursor OldCursor
      Set Text = You lose. Play again (y/n)? 
      GoSub StatusLine
      GoTo Again
   :YouWin
      Beep
      GoSub ShowCorrect
      SetCursor OldCursor
      Set Text = You win. Play again (y/n)? 
      GoSub StatusLine
   :Again
   SetWindow 1, 1, 80, 25
   AskYN ""
   SetColor White
   if ErrorLevel 1 GoTo StartProgram
   Cls
:End
